Hopefully this project gets completed.. lol

This project is not completed. I am able to manage resources, but was unable to implement the deadlock algorithm

What works:
- Process created at a random interval
- Request for a random amount of resources (under 20)
- children runs for one second when granted recources, if they cant obtain recources, they enter a blocked queue
- Processes get removed from the blocked queue whenever recources become available (are deallocated from another process)
- Project terminates after 5 real life seconds/40 forked processes/when all resources are deallocated
- All input is recorded in a logfile

Not working: 
- Process does not claim new resources for deadlock detection

To run project: 
./oss -f ""   

^
"" = string for name of logfile, '-f ""' is optional. It will create a log file named 'logfile' if it is given no -f argument

Github: 
https://github.com/GMHGDX/P4

Used message queues to communicate requests, allocation, and release of resources